{"code":"import { mergeTwo } from './mergeTwo';\r\nexport const merger = (deep, objs) => {\r\n    let merged = mergeTwo(deep, objs[0], objs[1]);\r\n    const remains = objs.splice(2);\r\n    remains.forEach(dominent => (merged = mergeTwo(deep, merged, dominent)));\r\n    return merged;\r\n};\r\n","references":["/Users/jawad/Workshop/NPM/tn-mergeobj/src/core/mergeTwo.ts","/Users/jawad/Workshop/NPM/tn-mergeobj/src/core/ObjectsArray.ts"],"dts":{"name":"/Users/jawad/Workshop/NPM/tn-mergeobj/dist/types/core/merger.d.ts","writeByteOrderMark":false,"text":"import { ObjectsArray } from './ObjectsArray';\r\nexport declare const merger: (deep: boolean, objs: ObjectsArray) => {\r\n    [x: string]: any;\r\n};\r\n"}}
